#!/bin/bash

# prereq
# su root
# apt-get update && apt-get upgrade && apt-get install sudo git-core
# add "jukeman ALL=(ALL) ALL" to the /etc/sudoers
# git clone git://github.com/jonmagic/jukeman_installer.git && cd jukeman_installer && sh install

# install required packages
sudo apt-get install build-essential libssl-dev libreadline5-dev alsa-utils mpd mpc liblzo2-2 liblzo2-dev bridge-utils

# set mixer volumes
amixer sset Master 100 unmute
amixer sset PCM 250 unmute
amixer sset Front 100 unmute

# compile tinc
cd src
tar zxvf tinc-1.0.12.tar.gz
cd tinc-1.0.12
./configure
make
sudo make install
cd ..
cd ..

# setup network to server
# read -p "What is the REAL ip of the tinc central server (e.g. 67.59.29.202)? " serverip
echo "Address = 67.59.29.202" > tinc/vpn/hosts/central
# read -p "What is your vpn network subnet (e.g. 10.111.222.0/24)? " subnet
echo "Subnet = 10.111.222.0/24" >> tinc/vpn/hosts/central
### replace with key from central server
echo "-----BEGIN RSA PUBLIC KEY-----" >> tinc/vpn/hosts/central
echo "MIGJAoGBAOJA5efj4bw3Rr1HVLuAZZxJFaQcmEB4Ji9wQfgtfneNN1D9M/6lGfTh" >> tinc/vpn/hosts/central
echo "0fRRdS1FWFCG27dX+0j4Om7SG+1FKTaJMSdWzBp2pnIC3nGilrCWqCerdENzrMuW" >> tinc/vpn/hosts/central
echo "VtPsrNyPiK18g1+0tXthHgQbVHptBWktLR3X1gtGXijB0dh6lxSxAgMBAAE=" >> tinc/vpn/hosts/central
echo "-----END RSA PUBLIC KEY-----" >> tinc/vpn/hosts/central
read -p "What do you want your tinc name to be? It cannot have spaces or dashes, and will be used for vpn and jukeman location name: " myname
echo "Name = $myname" > tinc/vpn/tinc.conf
echo "ConnectTo = central" >> tinc/vpn/tinc.conf
echo "Device = /dev/net/tun" >> tinc/vpn/tinc.conf
echo "Mode = switch" >> tinc/vpn/tinc.conf
echo "PrivateKeyFile = /usr/local/etc/tinc/vpn/rsa_key.priv" >> tinc/vpn/tinc.conf
echo "Subnet = 10.111.222.0/24" >> tinc/vpn/hosts/$myname
read -p "What do you want your tinc ip to be (e.g. 10.111.222.???)? " myip
echo "ifconfig bridge $myip netmask 255.255.255.0" >> tinc/vpn/tinc-up
echo "ifconfig bridge up" >> tinc/vpn/tinc-up
sudo cp -r tinc /usr/local/etc/
sudo tincd -n vpn -K
clear
echo "Copy the following file and paste it to /etc/tinc/vpn/hosts/$myname on the tinc server:"
echo ""
echo ""
cat tinc/vpn/hosts/$myname
sleep 30

# move to src dir
cd src

# download and install ruby
# wget ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p248.tar.gz
tar zxvf ruby-1.8.7-p248.tar.gz 
cd ruby-1.8.7-p248
./configure
make
sudo make install
cd ..

# download and install rubygems
# wget http://rubyforge.org/frs/download.php/69365/rubygems-1.3.6.tgz
tar zxvf rubygems-1.3.6.tgz
cd rubygems-1.3.6
sudo ruby setup.rb
cd ..

# setup and install mongo
tar zxvf mongodb-linux-x86_64-1.3.2.tgz
sudo mv mongodb-linux-x86_64-1.3.2 /opt/mongodb
echo "logappend = true" >> mongod_settings.conf
echo "logpath = /var/log/mongodb/mongod.log " >> mongod_settings.conf
echo "dbpath = /data/db" >> mongod_settings.conf
echo "master = true" >> mongod_settings.conf
while true; do
    read -p "Is this a slave jukebox (y/n)? " yn
    case $yn in
        [Yy]* ) echo "slave = true" >> mongod_settings.conf; read -p "What is the address to the master (e.g. 10.10.10.5:27017)? " ip; echo "source = $ip" >> mongod_settings.conf; break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.";;
    esac
done
sudo mv mongod_settings.conf /opt/mongodb/
sudo mkdir -p /data/db
sudo mkdir -p /var/log/mongodb
sudo ln -s /opt/mongodb/bin/mongo /usr/bin/mongo
sudo ln -s /opt/mongodb/bin/mongod /usr/bin/mongod
sudo ln -s /opt/mongodb/bin/mongodump /usr/bin/mongodump
sudo ln -s /opt/mongodb/bin/mongorestore /usr/bin/mongorestore

# install required gems
sudo gem install rails -v2.3.5 --no-ri --no-rdoc
sudo gem install mongo -v0.18.3 --no-ri --no-rdoc
sudo gem install mongo_ext -v0.18.3 --no-ri --no-rdoc
sudo gem install mongrel -v1.1.5 --no-ri --no-rdoc
sudo gem install mongo_mapper -v0.7.0 --no-ri --no-rdoc
sudo gem install mime-types -v1.16 --no-ri --no-rdoc
sudo gem install ruby-mp3info -v0.6.13 --no-ri --no-rdoc
sudo gem install navvy -v0.1.0 --no-ri --no-rdoc
sudo gem install crack -v0.1.6 --no-ri --no-rdoc
sudo gem install httparty -v0.5.2 --no-ri --no-rdoc
# wget http://github.com/jonmagic/rack-gridfs/raw/master/pkg/rack-gridfs-0.2.0.gem
sudo gem install rack-gridfs-0.2.0.gem --no-ri --no-rdoc
# wget http://github.com/jonmagic/librmpd/raw/master/pkg/librmpd-0.1.1.gem
sudo gem install librmpd-0.1.1.gem --no-ri --no-rdoc
sudo gem install god -v0.8.0 --no-ri --no-rdoc
cd ..


# copy init scripts
sudo cp init_scripts/tinc /etc/init.d/
sudo update-rc.d tinc defaults
sudo cp init_scripts/mongod /etc/init.d/
sudo update-rc.d mongod defaults
sudo cp init_scripts/god /etc/init.d/
sudo update-rc.d god defaults

# copy conf files
sudo cp conf/mpd.conf /etc/
sudo cp conf/god.conf /etc/


# install jukeman
cd ~
mkdir apps
cd apps
git clone git://github.com/jonmagic/jukeman.git
cd jukeman
mkdir log
echo "development: &non_production_settings" >> config/settings.yml
echo "  site_name: JukeMan" >> config/settings.yml
echo "  mpd_port: 6600" >> config/settings.yml
echo "  location: $myname" >> config/settings.yml
echo "  import_folder_path: /home/jukeman/music" >> config/settings.yml
echo "" >> config/settings.yml
echo "test:" >> config/settings.yml
echo "  <<: *non_production_settings" >> config/settings.yml
echo "  mpd_port: 7700" >> config/settings.yml
echo "  location: Testing" >> config/settings.yml
echo "production:" >> config/settings.yml
echo "  site_name: JukeMan" >> config/settings.yml
echo "  mpd_port: 6600" >> config/settings.yml
echo "  location: $myname" >> config/settings.yml
echo "  import_folder_path: /home/jukeman/music" >> config/settings.yml
clear

# reboot
while true; do
    read -p "Reboot (y/n)? " yn
    case $yn in
        [Yy]* ) sudo reboot; break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.";;
    esac
done